/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.app.manoel;

import br.app.manoel.database.Database;
import br.app.manoel.dao.Musica;
import br.app.manoel.structdata.Pilha;
import br.app.manoel.table.MyTable;
import jaco.mp3.player.MP3Player;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;




/**
 *
 * @author manoel
 */
public final class View extends javax.swing.JFrame {
    
    MyTable modelo = new MyTable();
    Pilha pilha;
    ArrayList<String> titulo = new ArrayList<>();
    ArrayList<String> artista = new ArrayList<>();
    /**
     * Creates new form View
     */
    public View(){
        initComponents();
        this.tabela.setModel(modelo);
        this.mp3 = new MP3Player();
        this.carregarTableDb();
        this.estado_repetir = false;
   
    }
    
    private MP3Player mp3;
    
    public void carregarTableDb()
    {
        int tamanho = 0;
        try
        {
            Connection conn = Database.getInstancia().getConexao();
            Iterator<Musica> it = Database.getInstancia().findAll().listIterator();
            while(it.hasNext())
            {
                Musica musica;
                musica = it.next();
                this.lblnome.setText("------");
                this.mp3.addToPlayList(new File(musica.getUrl()));
                titulo.add(musica.getTitulo());
                titulo.add(musica.getArtista());
                this.modelo.adicionarNovoElementoNaLinhaDaTabela(musica);
                tamanho++;
            }
            this.modelo.fireTableDataChanged();
            Database.getInstancia().desligar();
            String resultado = this.mp3.getPlayList().get(0).toString();
            int inicio = resultado.indexOf("a/");
            int fim = resultado.lastIndexOf(".m");
            this.lblnome.setText(resultado.substring(inicio+2, fim));
            this.estado = true;
            this.pilha = new Pilha(tamanho);
            System.out.println("Tamanho do vetor: "+this.pilha.sizePilha());
        }
        catch(SQLException ex)
        {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        lbltitulo = new javax.swing.JLabel();
        lblnome = new javax.swing.JLabel();
        btnplay = new javax.swing.JButton();
        btnrepeat = new javax.swing.JButton();
        btnpause = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        btnstop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        item_menu_load = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menu_item_bg = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Player Musica");

        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder("MÚSICA PLAYER"));

        lbltitulo.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        lbltitulo.setText("Título:");

        lblnome.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        lblnome.setText("minha música");

        btnplay.setText("Play");
        btnplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnplayActionPerformed(evt);
            }
        });

        btnrepeat.setText("Repetir");
        btnrepeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrepeatActionPerformed(evt);
            }
        });

        btnpause.setText("Pause");
        btnpause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpauseActionPerformed(evt);
            }
        });

        btnnext.setText("Next");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        btnstop.setText("Stop");
        btnstop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblnome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbltitulo)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(btnplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnrepeat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnpause)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnnext)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnback)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnstop)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblnome)
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnplay)
                    .addComponent(btnrepeat)
                    .addComponent(btnpause)
                    .addComponent(btnnext)
                    .addComponent(btnback)
                    .addComponent(btnstop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabela);

        jMenu1.setText("Arquivo");

        item_menu_load.setText("load");
        item_menu_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_menu_loadActionPerformed(evt);
            }
        });
        jMenu1.add(item_menu_load);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Configuracao");

        menu_item_bg.setText("background");
        menu_item_bg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_bgActionPerformed(evt);
            }
        });
        jMenu2.add(menu_item_bg);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void item_menu_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_menu_loadActionPerformed
        // TODO add your handling code here:
        estado = false;
        Connection con = Database.getInstancia().getConexao();
        JFileChooser jfile = new JFileChooser();
        int resultado = jfile.showSaveDialog(this.item_menu_load);
        if(resultado == JFileChooser.APPROVE_OPTION)
        {
            Musica musica = new Musica();
            File arquivoSelecionado = jfile.getSelectedFile();
            
            //
            this.setArquivo(arquivoSelecionado);
            this.setCaminho(arquivoSelecionado.getPath());
            musica.setTitulo(arquivoSelecionado.getName());
            musica.setArtista(arquivoSelecionado.getName());
            musica.setAlbum(arquivoSelecionado.getName());
            musica.setAno(2020);
            musica.setUrl(arquivo.getPath());
            boolean estado = Database.getInstancia().inserir(musica);
            if(estado == true)
            {
                this.modelo.adicionarNovoElementoNaLinhaDaTabela(musica);
                System.out.println(musica.getUrl());
                this.modelo.fireTableDataChanged();
                this.mp3.addToPlayList(new File(musica.getUrl()));
                System.out.println(arquivoSelecionado.getPath());
                this.estado = true;
                this.pilha.inserir();
                JOptionPane.showMessageDialog(this, "INSERIDO COM SUCESSO!!!");
            }
            else{
                JOptionPane.showMessageDialog(this, "Falha, não foi possivél inserir!!!");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Erro ao carregar");
        }
        
    }//GEN-LAST:event_item_menu_loadActionPerformed

    private void menu_item_bgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_bgActionPerformed
        // TODO add your handling code here:
        Sobre sobre = new Sobre();
        sobre.setVisible(true);
    }//GEN-LAST:event_menu_item_bgActionPerformed

    private void btnplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnplayActionPerformed
        // TODO add your handling code here:
        if(estado == true)
        {
            try {
                
                this.mp3.play();
                int posicao = this.tabela.getSelectedRow();
                String conteudo = this.modelo.getColumnName(posicao);
                this.lblnome.setText(conteudo);
                
            } catch (Exception ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnplayActionPerformed

    private void btnrepeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrepeatActionPerformed
        // TODO add your handling code here:
        
        if(estado == true){
            if(this.estado_repetir == false)
            {
                this.estado_repetir = true;
                this.mp3.setRepeat(estado_repetir);
                this.btnrepeat.setBackground(Color.RED);
            }
            else
            {
                
                this.estado_repetir = false;
                this.mp3.setRepeat(estado_repetir);
                this.btnrepeat.setBackground(Color.WHITE);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnrepeatActionPerformed

    private void btnpauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpauseActionPerformed
        // TODO add your handling code here:
        if(estado == true)
        {
            this.mp3.pause();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnpauseActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        // TODO add your handling code here:
        if(estado == true)
        {
            this.mp3.skipForward();
            this.pilha.inserir();
            String resultado = this.mp3.getPlayList().get(this.pilha.getPosicao()).toString();
            int inicio = resultado.indexOf("a/");
            int fim = resultado.lastIndexOf(".m");
            this.lblnome.setText(resultado.substring(inicio+2, fim));
            System.out.println(resultado.substring(inicio+2, fim));
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        if(estado == true)
        {
            this.mp3.skipBackward();
            this.pilha.remover();
            String resultado = this.mp3.getPlayList().get(this.pilha.getPosicao()).toString();
            int inicio = resultado.indexOf("a/");
            int fim = resultado.lastIndexOf(".m");
            this.lblnome.setText(resultado.substring(inicio+2, fim));
            System.out.println(resultado.substring(inicio+2, fim));
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnstopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstopActionPerformed
        // TODO add your handling code here:
        if(estado == true)
        {
            this.mp3.stop();
            estado = false;
        }
        else
        {
            estado = true;
            JOptionPane.showMessageDialog(this, "Carregada um arquivo primeiro", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnstopActionPerformed
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new View().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnpause;
    private javax.swing.JButton btnplay;
    private javax.swing.JButton btnrepeat;
    private javax.swing.JButton btnstop;
    private javax.swing.JMenuItem item_menu_load;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblnome;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JMenuItem menu_item_bg;
    private javax.swing.JPanel panel1;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

    private File arquivo;
    private String caminho;
    private boolean estado;
    private boolean estado_repetir;
    private int posicaoInicial;
    private int posicaoFinal;
    private int posicaoAtual;
    
    
    public void setArquivo(File arquivo)
    {
        this.arquivo = arquivo;
    }
    
    public void setCaminho(String caminho)
    {
        this.caminho = caminho;
    }
 
    
    public File getArquivo()
    {
        return arquivo;
    }
    
    public String getCaminho()
    {
        return caminho;
    }
    
    /**
     * @return the mp3
     */
    public MP3Player getMp3() {
        return mp3;
    }

    /**
     * @param mp3 the mp3 to set
     */
    public void setMp3(MP3Player mp3) {
        this.mp3 = mp3;
    }
    
}
